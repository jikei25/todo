// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package database

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
)

type StatusEnum string

const (
	StatusEnumPending    StatusEnum = "pending"
	StatusEnumInProgress StatusEnum = "in_progress"
	StatusEnumCompleted  StatusEnum = "completed"
	StatusEnumDeleted    StatusEnum = "deleted"
)

func (e *StatusEnum) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = StatusEnum(s)
	case string:
		*e = StatusEnum(s)
	default:
		return fmt.Errorf("unsupported scan type for StatusEnum: %T", src)
	}
	return nil
}

type NullStatusEnum struct {
	StatusEnum StatusEnum
	Valid      bool // Valid is true if StatusEnum is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullStatusEnum) Scan(value interface{}) error {
	if value == nil {
		ns.StatusEnum, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.StatusEnum.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullStatusEnum) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.StatusEnum), nil
}

type TodoItem struct {
	ID          int32
	Title       string
	Description sql.NullString
	Status      NullStatusEnum
	DueDate     sql.NullTime
	CreatedAt   sql.NullTime
	UpdatedAt   sql.NullTime
}
